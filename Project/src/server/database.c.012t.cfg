
;; Function create_database (create_database, funcdef_no=6, decl_uid=3868, cgraph_uid=7, symbol_order=8)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
create_database ()
{
  int j[100];
  int i[100];
  int fd;
  struct user u;

  <bb 2> :
  mkdir ("./database", 484);
  u.user_id = 0;
  u.type = 65;
  __builtin_memcpy (&u.name, "Super User", 11);
  __builtin_memcpy (&u.password, "qwerty", 7);
  u.online = 0;
  fd = open ("./database/user.dat", 65, 484);
  write (fd, &u, 76);
  close (fd);
  i = *.LC0;
  i[0] = 0;
  fd = open ("./database/user.ndx", 65, 484);
  write (fd, &i, 400);
  write (fd, 0B, 4);
  close (fd);
  fd = open ("./database/account.dat", 64, 484);
  close (fd);
  j = *.LC0;
  fd = open ("./database/account.ndx", 65, 484);
  write (fd, &j, 400);
  write (fd, 0B, 4);
  close (fd);
  u = {CLOBBER};
  i = {CLOBBER};
  j = {CLOBBER};
  return;

}



;; Function load_database (load_database, funcdef_no=7, decl_uid=3869, cgraph_uid=8, symbol_order=9)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
load_database ()
{
  int i;
  int semid;
  int key;
  union 
  {
    int val;
    struct semid_ds * buf;
    short unsigned int * array;
  } semun;
  int fd;
  int shmkey;

  <bb 2> :
  shmkey = ftok (".", 109);
  _1 = shmget (shmkey, 820, 996);
  shmid = _1;
  shmid.0_2 = shmid;
  _3 = shmat (shmid.0_2, 0B, 0);
  db_info = _3;
  fd = open ("./database/user.ndx", 0);
  db_info.1_4 = db_info;
  _5 = &db_info.1_4->user_index;
  read (fd, _5, 400);
  db_info.2_6 = db_info;
  _7 = &db_info.2_6->max_user_id;
  read (fd, _7, 4);
  close (fd);
  fd = open ("./database/account.ndx", 0);
  db_info.3_8 = db_info;
  _9 = &db_info.3_8->account_index;
  read (fd, _9, 400);
  db_info.4_10 = db_info;
  _11 = &db_info.4_10->max_account_id;
  read (fd, _11, 4);
  close (fd);
  db_info.5_12 = db_info;
  _13 = open ("./database/account.dat", 2);
  db_info.5_12->account_fd = _13;
  db_info.6_14 = db_info;
  _15 = open ("./database/user.dat", 2);
  db_info.6_14->user_fd = _15;
  key = ftok (".", 97);
  semid = semget (key, 4, 996);
  semun.val = 1;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  semctl (semid, i, 16, semun);
  i = i + 1;

  <bb 4> :
  if (i <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  db_info.7_16 = db_info;
  db_info.7_16->sem_id = semid;
  semun = {CLOBBER};
  return;

}



;; Function close_database (close_database, funcdef_no=8, decl_uid=3870, cgraph_uid=9, symbol_order=10)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
close_database ()
{
  int i;
  int semid;
  int key;
  union 
  {
    int val;
    struct semid_ds * buf;
    short unsigned int * array;
  } semun;
  struct user u;
  int fd;

  <bb 2> :
  fd = open ("./database/user.ndx", 513);
  db_info.8_1 = db_info;
  _2 = &db_info.8_1->user_index;
  write (fd, _2, 400);
  db_info.9_3 = db_info;
  _4 = &db_info.9_3->max_user_id;
  write (fd, _4, 4);
  close (fd);
  fd = open ("./database/account.ndx", 513);
  db_info.10_5 = db_info;
  _6 = &db_info.10_5->account_index;
  write (fd, _6, 400);
  db_info.11_7 = db_info;
  _8 = &db_info.11_7->max_account_id;
  write (fd, _8, 4);
  close (fd);
  sem_lock (1);
  db_info.12_9 = db_info;
  _10 = db_info.12_9->user_fd;
  lseek (_10, 0, 0);
  goto <bb 4>; [INV]

  <bb 3> :
  u.online = 0;
  db_info.13_11 = db_info;
  _12 = db_info.13_11->user_fd;
  lseek (_12, -76, 1);
  db_info.14_13 = db_info;
  _14 = db_info.14_13->user_fd;
  write (_14, &u, 76);

  <bb 4> :
  db_info.15_15 = db_info;
  _16 = db_info.15_15->user_fd;
  _17 = read (_16, &u, 76);
  if (_17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  key = ftok (".", 97);
  semid = semget (key, 4, 0);
  i = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  semctl (semid, i, 0, semun);
  i = i + 1;

  <bb 7> :
  if (i <= 3)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  db_info.16_18 = db_info;
  _19 = db_info.16_18->account_fd;
  close (_19);
  db_info.17_20 = db_info;
  _21 = db_info.17_20->user_fd;
  close (_21);
  db_info.18_22 = db_info;
  shmdt (db_info.18_22);
  shmid.19_23 = shmid;
  shmctl (shmid.19_23, 0, 0B);
  u = {CLOBBER};
  semun = {CLOBBER};
  return;

}



;; Function sem_lock (sem_lock, funcdef_no=9, decl_uid=3872, cgraph_uid=10, symbol_order=11)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
sem_lock (int i)
{
  struct sembuf buf;

  <bb 2> :
  _1 = (short unsigned int) i;
  buf.sem_num = _1;
  buf.sem_op = -1;
  buf.sem_flg = 0;
  db_info.20_2 = db_info;
  _3 = db_info.20_2->sem_id;
  semop (_3, &buf, 1);
  buf = {CLOBBER};
  return;

}



;; Function sem_unlock (sem_unlock, funcdef_no=10, decl_uid=3874, cgraph_uid=11, symbol_order=12)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
sem_unlock (int i)
{
  struct sembuf buf;

  <bb 2> :
  _1 = (short unsigned int) i;
  buf.sem_num = _1;
  buf.sem_op = 1;
  buf.sem_flg = 0;
  db_info.21_2 = db_info;
  _3 = db_info.21_2->sem_id;
  semop (_3, &buf, 1);
  buf = {CLOBBER};
  return;

}



;; Function insert_user (insert_user, funcdef_no=11, decl_uid=3876, cgraph_uid=12, symbol_order=13)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
insert_user (struct user * u)
{
  int i;
  int offset;
  int D.4071;

  <bb 2> :
  offset = -1;
  sem_lock (0);
  db_info.22_1 = db_info;
  _2 = db_info.22_1->max_user_id;
  _3 = _2 + 1;
  db_info.22_1->max_user_id = _3;
  _4 = db_info.22_1->max_user_id;
  u->user_id = _4;
  i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  db_info.23_5 = db_info;
  _6 = db_info.23_5->user_index[i];
  if (_6 == -1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _7 = (long unsigned int) i;
  _8 = (unsigned int) _7;
  _9 = _8 * 76;
  offset = (int) _9;
  db_info.24_10 = db_info;
  _11 = u->user_id;
  db_info.24_10->user_index[i] = _11;
  goto <bb 7>; [INV]

  <bb 5> :
  i = i + 1;

  <bb 6> :
  if (i <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  sem_unlock (0);
  if (offset == -1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.4071 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  sem_lock (1);
  _12 = (long int) offset;
  db_info.25_13 = db_info;
  _14 = db_info.25_13->user_fd;
  lseek (_14, _12, 0);
  db_info.26_15 = db_info;
  _16 = db_info.26_15->user_fd;
  write (_16, u, 76);
  sem_unlock (1);
  D.4071 = u->user_id;

  <bb 10> :
<L7>:
  return D.4071;

}



;; Function insert_account (insert_account, funcdef_no=12, decl_uid=3878, cgraph_uid=13, symbol_order=14)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
insert_account (struct account * a)
{
  int i;
  int offset;
  int D.4077;

  <bb 2> :
  offset = -1;
  sem_lock (3);
  db_info.27_1 = db_info;
  _2 = db_info.27_1->max_account_id;
  _3 = _2 + 1;
  db_info.27_1->max_account_id = _3;
  _4 = db_info.27_1->max_account_id;
  a->account_id = _4;
  i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  db_info.28_5 = db_info;
  _6 = db_info.28_5->account_index[i];
  if (_6 == -1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _7 = (long unsigned int) i;
  _8 = (unsigned int) _7;
  _9 = _8 * 12;
  offset = (int) _9;
  db_info.29_10 = db_info;
  _11 = a->account_id;
  db_info.29_10->account_index[i] = _11;
  goto <bb 7>; [INV]

  <bb 5> :
  i = i + 1;

  <bb 6> :
  if (i <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  sem_unlock (3);
  if (offset == -1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.4077 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  sem_lock (4);
  _12 = (long int) offset;
  db_info.30_13 = db_info;
  _14 = db_info.30_13->account_fd;
  lseek (_14, _12, 0);
  db_info.31_15 = db_info;
  _16 = db_info.31_15->account_fd;
  write (_16, a, 12);
  sem_unlock (4);
  D.4077 = 0;

  <bb 10> :
<L7>:
  return D.4077;

}



;; Function get_account_index (get_account_index, funcdef_no=13, decl_uid=3880, cgraph_uid=14, symbol_order=15)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
get_account_index (int account_id)
{
  int i;
  int D.4081;

  <bb 2> :
  sem_lock (3);
  i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  db_info.32_1 = db_info;
  _2 = db_info.32_1->account_index[i];
  printf ("%d ", _2);
  db_info.33_3 = db_info;
  _4 = db_info.33_3->account_index[i];
  if (account_id == _4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  sem_unlock (3);
  D.4081 = i;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  i = i + 1;

  <bb 6> :
  if (i <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  sem_unlock (3);
  D.4081 = -1;

  <bb 8> :
<L5>:
  return D.4081;

}



;; Function get_user_index (get_user_index, funcdef_no=14, decl_uid=3882, cgraph_uid=15, symbol_order=16)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
get_user_index (int user_id)
{
  int i;
  int D.4085;

  <bb 2> :
  sem_lock (0);
  i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  db_info.34_1 = db_info;
  _2 = db_info.34_1->user_index[i];
  if (user_id == _2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  sem_unlock (0);
  D.4085 = i;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  i = i + 1;

  <bb 6> :
  if (i <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  sem_unlock (0);
  D.4085 = -1;

  <bb 8> :
<L5>:
  return D.4085;

}



;; Function lock_account (lock_account, funcdef_no=15, decl_uid=3885, cgraph_uid=16, symbol_order=17)

Merging blocks 11 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
lock_account (int ndx, int type)
{
  int i;
  struct flock l1;
  int offset;
  int D.4098;

  <bb 2> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 12;
  offset = (int) _3;
  if (type == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  l1.l_type = 0;
  goto <bb 8>; [INV]

  <bb 4> :
  if (type == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  l1.l_type = 1;
  __builtin_puts (&"writeLocked"[0]);
  goto <bb 8>; [INV]

  <bb 6> :
  if (type == -1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  l1.l_type = 2;
  __builtin_puts (&"unlocked"[0]);

  <bb 8> :
  l1.l_whence = 0;
  _4 = (long int) offset;
  l1.l_start = _4;
  l1.l_len = 12;
  _5 = getpid ();
  l1.l_pid = _5;
  if (type == -1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  db_info.35_6 = db_info;
  _7 = db_info.35_6->account_fd;
  fcntl (_7, 6, &l1);
  goto <bb 11>; [INV]

  <bb 10> :
  db_info.36_8 = db_info;
  _9 = db_info.36_8->account_fd;
  i = fcntl (_9, 7, &l1);
  _10 = l1.l_len;
  printf ("i %d %ld\n", offset, _10);
  perror ("fcntl");

  <bb 11> :
  D.4098 = 0;
  l1 = {CLOBBER};

  <bb 12> :
<L12>:
  return D.4098;

}



;; Function lock_user (lock_user, funcdef_no=16, decl_uid=3888, cgraph_uid=17, symbol_order=18)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
lock_user (int ndx, int type)
{
  struct flock l1;
  int offset;

  <bb 2> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 76;
  offset = (int) _3;
  if (type == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  l1.l_type = 0;
  goto <bb 8>; [INV]

  <bb 4> :
  if (type == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  l1.l_type = 1;
  goto <bb 8>; [INV]

  <bb 6> :
  if (type == -1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  l1.l_type = 2;

  <bb 8> :
  l1.l_whence = 0;
  _4 = (long int) offset;
  l1.l_start = _4;
  l1.l_len = 76;
  _5 = getpid ();
  l1.l_pid = _5;
  if (type == -1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  db_info.37_6 = db_info;
  _7 = db_info.37_6->user_fd;
  fcntl (_7, 6, &l1);
  goto <bb 11>; [INV]

  <bb 10> :
  db_info.38_8 = db_info;
  _9 = db_info.38_8->user_fd;
  fcntl (_9, 7, &l1);

  <bb 11> :
  l1 = {CLOBBER};
  return;

}



;; Function delete_user (delete_user, funcdef_no=17, decl_uid=3890, cgraph_uid=18, symbol_order=19)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
delete_user (int user_id)
{
  struct account a;
  int acc_offset;
  int acc_ndx;
  struct user u;
  int offset;
  int ndx;
  int D.4114;

  <bb 2> :
  ndx = get_user_index (user_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4114 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  sem_lock (0);
  db_info.39_1 = db_info;
  db_info.39_1->user_index[ndx] = -1;
  sem_unlock (0);
  _2 = (long unsigned int) ndx;
  _3 = (unsigned int) _2;
  _4 = _3 * 76;
  offset = (int) _4;
  lock_user (ndx, 1);
  sem_lock (1);
  _5 = (long int) offset;
  db_info.40_6 = db_info;
  _7 = db_info.40_6->user_fd;
  lseek (_7, _5, 0);
  db_info.41_8 = db_info;
  _9 = db_info.41_8->user_fd;
  read (_9, &u, 76);
  sem_unlock (1);
  _10 = u.account_id;
  acc_ndx = get_account_index (_10);
  _11 = (long unsigned int) acc_ndx;
  _12 = (unsigned int) _11;
  _13 = _12 * 12;
  acc_offset = (int) _13;
  lock_account (acc_ndx, 1);
  sem_lock (4);
  _14 = (long int) acc_offset;
  db_info.42_15 = db_info;
  _16 = db_info.42_15->account_fd;
  lseek (_16, _14, 0);
  db_info.43_17 = db_info;
  _18 = db_info.43_17->account_fd;
  read (_18, &a, 12);
  sem_unlock (4);
  _19 = a.number_of_users;
  if (_19 > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _20 = a.number_of_users;
  _21 = _20 + -1;
  a.number_of_users = _21;
  sem_lock (4);
  _22 = (long int) acc_offset;
  db_info.44_23 = db_info;
  _24 = db_info.44_23->account_fd;
  lseek (_24, _22, 0);
  db_info.45_25 = db_info;
  _26 = db_info.45_25->account_fd;
  write (_26, &a, 12);
  sem_unlock (4);
  goto <bb 7>; [INV]

  <bb 6> :
  sem_lock (3);
  db_info.46_27 = db_info;
  db_info.46_27->account_index[acc_ndx] = -1;
  sem_unlock (3);

  <bb 7> :
  lock_account (acc_ndx, -1);
  lock_user (ndx, -1);
  D.4114 = 0;

  <bb 8> :
  u = {CLOBBER};
  a = {CLOBBER};

  <bb 9> :
<L6>:
  return D.4114;

}



;; Function get_balance (get_balance, funcdef_no=18, decl_uid=3892, cgraph_uid=19, symbol_order=20)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
get_balance (int account_id)
{
  int offset;
  struct account a;
  int ndx;
  int D.4122;

  <bb 2> :
  ndx = get_account_index (account_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4122 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  lock_account (ndx, 0);
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 12;
  offset = (int) _3;
  sem_lock (4);
  _4 = (long int) offset;
  db_info.47_5 = db_info;
  _6 = db_info.47_5->account_fd;
  lseek (_6, _4, 0);
  db_info.48_7 = db_info;
  _8 = db_info.48_7->account_fd;
  read (_8, &a, 12);
  sem_unlock (4);
  lock_account (ndx, -1);
  _9 = a.balance;
  D.4122 = (int) _9;

  <bb 5> :
  a = {CLOBBER};

  <bb 6> :
<L3>:
  return D.4122;

}



;; Function transaction (transaction, funcdef_no=19, decl_uid=3895, cgraph_uid=20, symbol_order=21)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
transaction (int account_id, float amount)
{
  int offset;
  struct account a;
  int ndx;
  int D.4127;

  <bb 2> :
  ndx = get_account_index (account_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4127 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  lock_account (ndx, 1);
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 12;
  offset = (int) _3;
  sem_lock (4);
  _4 = (long int) offset;
  db_info.49_5 = db_info;
  _6 = db_info.49_5->account_fd;
  lseek (_6, _4, 0);
  db_info.50_7 = db_info;
  _8 = db_info.50_7->account_fd;
  read (_8, &a, 12);
  sem_unlock (4);
  _9 = a.balance;
  _10 = amount + _9;
  if (_10 > 0.0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _11 = (double) amount;
  _12 = a.balance;
  _13 = (double) _12;
  printf ("%f %f\n", _13, _11);
  _14 = a.balance;
  _15 = amount + _14;
  a.balance = _15;
  _16 = a.balance;
  _17 = (double) _16;
  printf ("%f\n", _17);
  sem_lock (4);
  _18 = (long int) offset;
  db_info.51_19 = db_info;
  _20 = db_info.51_19->account_fd;
  lseek (_20, _18, 0);
  db_info.52_21 = db_info;
  _22 = db_info.52_21->account_fd;
  write (_22, &a, 12);
  sem_unlock (4);
  lock_account (ndx, -1);
  D.4127 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  lock_account (ndx, -1);
  D.4127 = -2;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  a = {CLOBBER};

  <bb 8> :
<L5>:
  return D.4127;

}



;; Function check_password (check_password, funcdef_no=20, decl_uid=3898, cgraph_uid=21, symbol_order=22)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 5 10 }
;; 5 succs { 6 7 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
check_password (int user_id, char * password)
{
  struct user u;
  int offset;
  int ndx;
  int D.4134;

  <bb 2> :
  ndx = get_user_index (user_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4134 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 76;
  offset = (int) _3;
  lock_user (ndx, 1);
  sem_lock (1);
  _4 = (long int) offset;
  db_info.53_5 = db_info;
  _6 = db_info.53_5->user_fd;
  lseek (_6, _4, 0);
  db_info.54_7 = db_info;
  _8 = db_info.54_7->user_fd;
  read (_8, &u, 76);
  _9 = strcmp (password, &u.password);
  if (_9 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  _10 = u.online;
  if (_10 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  sem_unlock (1);
  lock_user (ndx, -1);
  D.4134 = 3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 7> :
  u.online = 1;
  _11 = (long int) offset;
  db_info.55_12 = db_info;
  _13 = db_info.55_12->user_fd;
  lseek (_13, _11, 0);
  db_info.56_14 = db_info;
  _15 = db_info.56_14->user_fd;
  write (_15, &u, 76);
  sem_unlock (1);
  lock_user (ndx, -1);
  _16 = u.type;
  if (_16 == 65)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.4134 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 9> :
  D.4134 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  sem_unlock (1);
  lock_user (ndx, -1);
  D.4134 = 0;

  <bb 11> :
  u = {CLOBBER};

  <bb 12> :
<L9>:
  return D.4134;

}



;; Function logout (logout, funcdef_no=21, decl_uid=3911, cgraph_uid=22, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
logout (int user_id)
{
  struct user u;
  int offset;
  int ndx;
  int D.4145;

  <bb 2> :
  ndx = get_user_index (user_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4145 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 76;
  offset = (int) _3;
  lock_user (ndx, 1);
  sem_lock (1);
  _4 = (long int) offset;
  db_info.57_5 = db_info;
  _6 = db_info.57_5->user_fd;
  lseek (_6, _4, 0);
  db_info.58_7 = db_info;
  _8 = db_info.58_7->user_fd;
  read (_8, &u, 76);
  u.online = 0;
  _9 = (long int) offset;
  db_info.59_10 = db_info;
  _11 = db_info.59_10->user_fd;
  lseek (_11, _9, 0);
  db_info.60_12 = db_info;
  _13 = db_info.60_12->user_fd;
  write (_13, &u, 76);
  sem_unlock (1);
  lock_user (ndx, -1);
  D.4145 = 0;

  <bb 5> :
  u = {CLOBBER};

  <bb 6> :
<L3>:
  return D.4145;

}



;; Function change_password (change_password, funcdef_no=22, decl_uid=3901, cgraph_uid=23, symbol_order=24)

Merging blocks 3 and 5
Merging blocks 4 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 1 }
;; 5 succs { 1 }
change_password (int user_id, char * password)
{
  struct user u;
  int offset;
  int ndx;
  int D.4150;

  <bb 2> :
  ndx = get_user_index (user_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4150 = -1;
  // predicted unlikely by early return (on trees) predictor.
  u = {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 76;
  offset = (int) _3;
  lock_user (ndx, 1);
  sem_lock (1);
  _4 = (long int) offset;
  db_info.61_5 = db_info;
  _6 = db_info.61_5->user_fd;
  lseek (_6, _4, 0);
  db_info.62_7 = db_info;
  _8 = db_info.62_7->user_fd;
  read (_8, &u, 76);
  strcpy (&u.password, password);
  _9 = (long int) offset;
  db_info.63_10 = db_info;
  _11 = db_info.63_10->user_fd;
  lseek (_11, _9, 0);
  db_info.64_12 = db_info;
  _13 = db_info.64_12->user_fd;
  write (_13, &u, 76);
  sem_unlock (1);
  lock_user (ndx, -1);
  u = {CLOBBER};
  return;

  <bb 5> :
<L4>:
  return D.4150;

}



;; Function search (search, funcdef_no=23, decl_uid=3905, cgraph_uid=24, symbol_order=25)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
search (int user_id, struct user * u, struct account * a)
{
  int acc_ndx;
  int offset;
  int ndx;
  int D.4156;

  <bb 2> :
  ndx = get_user_index (user_id);
  printf ("%d\n", ndx);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4156 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 76;
  offset = (int) _3;
  lock_user (ndx, 0);
  sem_lock (1);
  _4 = (long int) offset;
  db_info.65_5 = db_info;
  _6 = db_info.65_5->user_fd;
  lseek (_6, _4, 0);
  db_info.66_7 = db_info;
  _8 = db_info.66_7->user_fd;
  read (_8, u, 76);
  sem_unlock (1);
  lock_user (ndx, -1);
  _9 = u->account_id;
  acc_ndx = get_account_index (_9);
  _10 = (long unsigned int) acc_ndx;
  _11 = (unsigned int) _10;
  _12 = _11 * 12;
  offset = (int) _12;
  lock_account (acc_ndx, 1);
  sem_lock (4);
  _13 = (long int) offset;
  db_info.67_14 = db_info;
  _15 = db_info.67_14->account_fd;
  lseek (_15, _13, 0);
  db_info.68_16 = db_info;
  _17 = db_info.68_16->account_fd;
  read (_17, a, 76);
  sem_unlock (4);
  D.4156 = 0;

  <bb 5> :
<L2>:
  return D.4156;

}



;; Function get_account_id (get_account_id, funcdef_no=24, decl_uid=3907, cgraph_uid=25, symbol_order=26)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
get_account_id (int user_id)
{
  struct user u;
  int offset;
  int ndx;
  int D.4158;

  <bb 2> :
  ndx = get_user_index (user_id);
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 76;
  offset = (int) _3;
  lock_user (ndx, 0);
  sem_lock (1);
  _4 = (long int) offset;
  db_info.69_5 = db_info;
  _6 = db_info.69_5->user_fd;
  lseek (_6, _4, 0);
  db_info.70_7 = db_info;
  _8 = db_info.70_7->user_fd;
  read (_8, &u, 76);
  sem_unlock (1);
  lock_user (ndx, -1);
  D.4158 = u.account_id;
  u = {CLOBBER};

  <bb 3> :
<L1>:
  return D.4158;

}



;; Function attach_new_user (attach_new_user, funcdef_no=25, decl_uid=3909, cgraph_uid=26, symbol_order=27)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
attach_new_user (int account_id)
{
  struct account a;
  int offset;
  int ndx;
  int D.4163;

  <bb 2> :
  ndx = get_account_index (account_id);
  if (ndx == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4163 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = (long unsigned int) ndx;
  _2 = (unsigned int) _1;
  _3 = _2 * 12;
  offset = (int) _3;
  lock_account (ndx, 1);
  sem_lock (4);
  _4 = (long int) offset;
  db_info.71_5 = db_info;
  _6 = db_info.71_5->account_fd;
  lseek (_6, _4, 0);
  db_info.72_7 = db_info;
  _8 = db_info.72_7->account_fd;
  read (_8, &a, 12);
  _9 = a.number_of_users;
  _10 = _9 + 1;
  a.number_of_users = _10;
  _11 = (long int) offset;
  db_info.73_12 = db_info;
  _13 = db_info.73_12->account_fd;
  lseek (_13, _11, 0);
  db_info.74_14 = db_info;
  _15 = db_info.74_14->account_fd;
  write (_15, &a, 12);
  sem_unlock (4);
  lock_account (ndx, -1);
  D.4163 = 0;

  <bb 5> :
  a = {CLOBBER};

  <bb 6> :
<L3>:
  return D.4163;

}


